<form method="GET" action="/search" class="text-gray-800 py-4 space-y-3" style="z-index: 9999;">


  <div class="flex justify-between w-full bg-white py-2 px-3 rounded-full"
    style="filter: drop-shadow(0 0px 6px #314b5890);">
    <input id="search-input" type="text" name="q" class="w-full border-gray-300 rounded-full p-2 outline-none "
      placeholder="Search...">
    <button id="search-button" class="w-auto bg-blue-500 text-white rounded-full px-7 py-[6px]">Search</button>
  </div>

  <div class="filters md:grid md:grid-cols-3 gap-x-3 w-full">

    <div class="relative z-[23] w-full flex justify-center rounded-full bg-white p-2 col-span-1"
      style="filter: drop-shadow(0 0px 6px #314b5890);">

      <div class="w-full relative flex py-1 px-2">
        <div id="dropdown2"
          class="flex w-full justify-between items-center bg-white border-gray-300 rounded-md shadow-sm cursor-pointer">
          <span class="text-gray-500">Item Category</span>
          <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
          </svg>
        </div>
        <ul id="options-list2"
          class="hidden top-8 z-[22] left-1/2 right-1/2 -translate-x-1/2  absolute w-full bg-white border border-gray-300 rounded-md shadow-lg max-h-52 overflow-auto">
          <li class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
            data-value="Electronics">Electronics</li>
          <li class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
            data-value="Clothing">Clothing</li>
          <li class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
            data-value="Furniture">Furniture</li>
          <li class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
            data-value="Books">Books</li>
          <li class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
            data-value="Games">Games</li>
        </ul>
        <input type="hidden" id="itemCategoryFilterInput" name="itemCategoryFilter">
      </div>

      <script>
        const dropdown2 = document.getElementById('dropdown2');
        const optionsList2 = document.getElementById('options-list2');
        const selectedOptions2 = [];
        const itemCategoryFilterInput = document.getElementById('itemCategoryFilterInput');

        dropdown2.addEventListener('click', () => {
          optionsList2.classList.toggle('hidden');
        });

        optionsList2.addEventListener('click', (event) => {
          const target = event.target.closest('.option-item');
          if (!target) return;

          const value = target.getAttribute('data-value');
          if (selectedOptions2.includes(value)) {
            selectedOptions2.splice(selectedOptions2.indexOf(value), 1);
          } else {
            selectedOptions2.push(value);
          }

          updateOptionsList2();
          updateDropdownText2();
          updateHiddenInput2();
        });

        function updateOptionsList2() {
          document.querySelectorAll('#options-list2 .option-item').forEach(item => {
            const value = item.getAttribute('data-value');
            if (selectedOptions2.includes(value)) {
              item.innerHTML = `<span class="text-[#183FC7]">&#10003; </span>` + value;
            } else {
              item.innerHTML = value;
            }
          });
        }

        function updateDropdownText2() {
          const dropdownText = selectedOptions2.length > 0 ? `${selectedOptions2.length} selected` : 'Item Category';
          dropdown2.querySelector('span').textContent = dropdownText;
        }

        function updateHiddenInput2() {
          itemCategoryFilterInput.value = selectedOptions2.join(',');
        }

        // Initial call to set the dropdown text
        updateDropdownText2();
      </script>


    </div>


    <div
      class="relative z-[22] grid grid-cols-2 gap-x-1 w-full mt-[5px] md:mt-[2px] md:flex md:justify-between md:col-span-2 md:gap-x-3 "
      style="filter: drop-shadow(0 0px 6px #314b5890);">
      <div class="w-full flex justify-center rounded-full bg-white p-2 relative z-[22]">
        <div class="w-full relative  flex flex-col py-1 z-[22] px-2">
          <div id="dropdown-brand"
            class="grid grid-cols-4 items-center w-full bg-white border-gray-300 rounded-md shadow-sm cursor-pointer overflow-hidden">
            <input id="brandSelect" type="text" class="text-gray-500 outline-none inline-block col-span-3"
              placeholder="Brand Name">
            <svg class="w-4 h-4 text-gray-500 justify-self-end col-span-1" fill="none" stroke="currentColor"
              stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <ul id="options-list-brand"
            class="hidden z-[22]  top-8 left-1/2 right-1/2 -translate-x-1/2  absolute w-full bg-white border border-gray-300 rounded-md shadow-lg max-h-52 overflow-auto">

            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="Gazal">Gazal</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="Alkahf">Alkahf</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="Alnassar">Alnassar</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="LC">LC</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="R&B">R&B</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="Apple">Apple</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="Sony">Sony</li>
              <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="Samsung">Samsung</li>
          </ul>


          <input type="hidden" id="brandFilterInput" name="brandFilter">

        </div>
        <script>
          const dropdownBrand = document.getElementById('dropdown-brand');
          const brandSelect = document.getElementById('brandSelect');
          const optionsListBrand = document.getElementById('options-list-brand');
          const selectedOptionsBrand = [];
          const brandFilterInput = document.getElementById('brandFilterInput');

          brandSelect.addEventListener('input', () => {
            optionsListBrand.classList.remove('hidden');
            const value = brandSelect.value;
            document.querySelectorAll('#options-list-brand .option-item').forEach(item => {
              if (item.getAttribute('data-value').toLowerCase().includes(value.toLowerCase())) {
                item.classList.remove('hidden');
              } else {
                item.classList.add('hidden');
              }
            });
          });
          dropdownBrand.addEventListener('click', () => {
            optionsListBrand.classList.toggle('hidden');
          });

          optionsListBrand.addEventListener('click', (event) => {
            const target = event.target.closest('.option-item');
            if (!target) return;

            const value = target.getAttribute('data-value');
            if (selectedOptionsBrand.includes(value)) {
              selectedOptionsBrand.splice(selectedOptionsBrand.indexOf(value), 1);
            } else {
              selectedOptionsBrand.push(value);
            }

            updateoptionsListBrand();
            updateDropdownTextBrand();
            updateHiddenInputBrand();
          });

          function updateoptionsListBrand() {
            document.querySelectorAll('#options-list-brand .option-item').forEach(item => {
              const value = item.getAttribute('data-value');
              if (selectedOptionsBrand.includes(value)) {
                item.innerHTML = `<span class="text-[#183FC7]">&#10003; </span>` + value;
              } else {
                item.innerHTML = value;
              }
            });
          }

          function updateDropdownTextBrand() {
            console.log("updateDropdownTextBrand:");
            brandSelect.placeholder = selectedOptionsBrand.length > 0 ? `${selectedOptionsBrand.length} selected` : 'Brands';
          }

          function updateHiddenInputBrand() {
            brandFilterInput.value = selectedOptionsBrand.join(',');
          }


        </script>
      </div>
      <div class="w-full flex justify-center rounded-full bg-white p-2 relative z-[22]">
        <div class=" w-full relative flex py-1 px-2 z-[22]">
          <div id="dropdown4"
            class="flex w-full justify-between items-center bg-white border-gray-300 rounded-md shadow-sm cursor-pointer">
            <span class="text-gray-500">Price Range</span>
            <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
          <ul id="options-list4"
            class="hidden z-[22] top-8 left-1/2 right-1/2 -translate-x-1/2  absolute w-full bg-white border border-gray-300 rounded-md shadow-lg max-h-52 overflow-auto">
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="<=20BHD">
              <= 20BHD</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="<=50BHD">
              <= 50BHD</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="<=100BHD">
              <= 100BHD</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="<=250BHD">
              <= 250BHD</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="<=500BHD">
              <= 500BHD</li>
            <li
              class="option-item cursor-pointer select-none relative py-2 pl-10 pr-4 hover:bg-blue-500 hover:text-white"
              data-value="+500BHD">
               +500BHD</li>
          </ul>
          <input type="hidden" id="priceRangeFilterInput" name="priceRangeFilter">
        </div>

        <script>
          const dropdown4 = document.getElementById('dropdown4');
          const optionsList4 = document.getElementById('options-list4');
          const selectedOptions4 = [];
          const priceRangeFilterInput = document.getElementById('priceRangeFilterInput');

          dropdown4.addEventListener('click', () => {
            optionsList4.classList.toggle('hidden');
          });

          optionsList4.addEventListener('click', (event) => {
            const target = event.target.closest('.option-item');
            if (!target) return;

            const value = target.getAttribute('data-value');
            if (selectedOptions4.includes(value)) {
              selectedOptions4.splice(selectedOptions4.indexOf(value), 1);
            } else {
              selectedOptions4.push(value);
            }

            updateOptionsList4();
            updateDropdownText4();
            updateHiddenInput4();
          });

          function updateOptionsList4() {
            document.querySelectorAll('#options-list4 .option-item').forEach(item => {
              const value = item.getAttribute('data-value');
              if (selectedOptions4.includes(value)) {
                item.innerHTML = `<span class="text-[#183FC7]">&#10003; </span>` + value;
              } else {
                item.innerHTML = value;
              }
            });
          }

          function updateDropdownText4() {
            const dropdownText = selectedOptions4.length > 0 ? `${selectedOptions4.length} selected` : 'Price Range';
            dropdown4.querySelector('span').textContent = dropdownText;
          }

          function updateHiddenInput4() {
            priceRangeFilterInput.value = selectedOptions4.join(',');
          }

          // Initial call to set the dropdown text
          updateDropdownText4();
        </script>
      </div>
    </div>

  </div>



</form>

<script>
  document.addEventListener('click', (event) => {

    if (!dropdownBrand.contains(event.target) && !brandSelect.contains(event.target) && !optionsListBrand.contains(event.target)) {
      optionsListBrand.classList.add('hidden');
    }
    if (!dropdown2.contains(event.target) && !optionsList2.contains(event.target)) {
      optionsList2.classList.add('hidden');
    }
    if (!dropdown4.contains(event.target) && !optionsList4.contains(event.target)) {
      optionsList4.classList.add('hidden');
    }

  });
</script>